# MUC Filter

## MUC Configuration

in the room configuration the "muc#roomconfig_filterjid" field is added.


* Example - Owner Requests Configuration Form

```xml
<iq from='crone1@shakespeare.lit/desktop'
    id='config1'
    to='coven@chat.shakespeare.lit'
    type='get'>
  <query xmlns='http://jabber.org/protocol/muc#owner'/>
</iq>
```

* Example - Service Sends Configuration Form to Owner

```xml
<iq from='coven@chat.shakespeare.lit'
    id='create1'
    to='crone1@shakespeare.lit/desktop'
    type='result'>
  <query xmlns='http://jabber.org/protocol/muc#owner'>
    <x xmlns='jabber:x:data' type='form'>
      <field type='hidden' var='FORM_TYPE'>
        <value>http://jabber.org/protocol/muc#roomconfig</value>
      </field>
      ...
      <field
          label='Filter messages from unaffiliated users through Jabber ID'
          type='text-single'
          var='muc#roomconfig_filterjid'>
        <value></value>
      </field>
      ...
    </x>
  </query>
</iq>
```

the full JID of the filtering bot MUST be entered in the "muc#roomconfig_filterjid" field.

if this JID is not present in the room - MUC filter MUST be disabled.

* Example - MUC Owner Submits Configuration Form

```xml
<iq from='coven@chat.shakespeare.lit'
    id='configure1'
    to='crone1@shakespeare.lit/desktop'
    type='set'>
  <query xmlns='http://jabber.org/protocol/muc#owner'>
    <x xmlns='jabber:x:data' type='submit'>
      <field type='hidden' var='FORM_TYPE'>
        <value>http://jabber.org/protocol/muc#roomconfig</value>
      </field>
      ...
      <field var='muc#roomconfig_filterjid'>
        <value>filterbot@example.com/robot</value>
      </field>
      ...
    </x>
  </query>
</iq>
```

## Principle of Operation

- if the filter JID is present in the room, then all messages and presences from participants with affiliation none are passed to the filter JID:

- Example: Service MUC Filter query / Message:

```xml
        <iq from='room@muc.example.com' id='filter1' to='filterbot@example.com/robot' type='set'>
           <query xmlns='urn:xmpp:muc-filter'>
               <message>...</message> # Original stanza with message
           </query>
       </iq>
```

- Example: Filter JID returns MUC-Filter query result:

       <iq from='filterbot@example.com/robot' id='filter1' to='room@muc.example.com' type='result'>
           <query xmlns='urn:xmpp:muc-filter'>
               <message>...</message> # Modified stanza with a message
           </query>
       </iq>

- Example: Service MUC Filter query / Presence:

      <iq from='room@muc.example.com' id='filter2' to='filterbot@example.com/robot' type='set'>
           <query xmlns='urn:xmpp:muc-filter'>
               <presence>...</presence> # Original stanza with a presence
           </query>
       </iq>

- Example: Filter JID returns MUC-Filter query result:

```xml
<iq from='filterbot@example.com/robot' to='room@muc.example.com' type='result' id='filter2'>
           <query xmlns='urn:xmpp:muc-filter'>
               <presence>...</presence> # Modified stanza with presence
           </query>
       </iq>
```

- the result is transferred to the conference after processing. 
- the result may not return to the conference.

## Terminology

- *Filter JID* - the full JID of the filtering bot which set in the "muc#roomconfig_filterjid" room configuration field. 
- *Modified Stanza/Presence/Message* - a stanza was processed by the Filter JID. 
- *Sender* - 'from' attribute value of a modified or an original stanza.
- *Recipient* - 'to' attribute value of a modified or an original stanza.
